#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jan 17 20:00:36 2019

@author: pandit
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

#Importing data
dataset=pd.read_csv("/home/pandit/Downloads/Udemy/Multiple_Linear_Regression/50_Startups.csv")
X=dataset.iloc[:,:-1].values
y=dataset.iloc[:,4].values

from sklearn.preprocessing import LabelEncoder,OneHotEncoder
labelencode_X=LabelEncoder()
X[:,3]=labelencode_X.fit_transform(X[:,3])
onehotencode=OneHotEncoder(categorical_features=[3])
X=onehotencode.fit_transform(X).toarray()

#Avoid the dummy varaible trap
X=X[:,1:]

#Spliting the dataset into the training set and Test set
from sklearn.cross_validation import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)

#Fit model
from sklearn.linear_model import LinearRegression
regressor=LinearRegression()
regressor.fit(X_train,y_train)

#Predict the test set
y_pred=regressor.predict(X_test)

#Building the optimal model using backward elimination
import statsmodels.formula.api as sm
X=np.append(arr=np.ones((50,1)).astype(int),value=X,axis=1)
X_opt=X[:,[0,1,2,3,4,5]]
regressor_OLS=sm.OLS(endog=y,exog=X_opt).fit()
regressor_OLS.summery()